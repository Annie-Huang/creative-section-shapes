*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --body-bg: hsl(0, 0%, 12%);
}

html {
  /* Does not work as my computer is not set to dark mode*/
  color-scheme: dark light;

  /*background-color: black;*/
  /*color: white;*/
}

body {
  background-color: var(--body-bg);
  color: white;

  font-family: system-ui;
  font-size: 1.25rem;
  line-height: 1.5;
  margin: 0;
}

.wrapper {
  max-width: 50rem;
  margin-inline: auto;
  padding-inline: 1rem;
}

.site-title {
  font-size: 3rem;
  text-align: center;
}

.section-title {
  font-size: 2.25rem;
}

section {
  padding-block: 5rem;
}

.diagonal {
  --skew-angle: -5deg;
  --background: linear-gradient(45deg, #12c2e9, #c471ed, #f64f59);

  position: relative;
  /*background-image: linear-gradient(45deg, #12c2e9, #c471ed, #f64f59);*/

  /* This make sure the z-index=-1 in ::after is always stay within the diagonal, in case this section is inside another
     section that has a background image, which will push this z-index all the way to the very bottom
     */
  isolation: isolate;
}

/* This make sure the skew angle is always the same when you resize the screen */
.diagonal::after {
  content: '';
  /*background: steelblue;*/
  background-image: var(--background);
  position: absolute;
  z-index: -1;
  inset: 0;

  transform: skewY(var(--skew-angle));
}

.spikes {
  --spike-width: 50px;
  --spike-height: 10px;
  --spike-color: var(--body-bg);

  position: relative;
  color: black;
  /* linear-gradient '90deg' is the same as 'to right' */
  background: linear-gradient(to right, #fdc830, #f37335);
}

.spikes::before,
.spikes::after {
  content: '';
  position: absolute;
  width: 100%;
  height: var(--spike-height); /* need to match the mask height */
  background: var(--spike-color);
  -webkit-mask-image: url('assets/triangle.svg');

  /* you can try different number to have a look, e.g. 10px 20px*/
  /*-webkit-mask-size: 10px 20px;*/
  -webkit-mask-size: var(--spike-width) var(--spike-height);
}

.spikes::before {
  top: 0;
}
.spikes::after {
  bottom: 0;
  /* 0.5turn is the same as 180deg */
  transform: rotate(0.5turn);
}
